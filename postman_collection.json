{
  "info": {
    "_postman_id": "ecommerce-user-service",
    "name": "Ecommerce User Service",
    "description": "API collection for testing the User Service endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3001/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3001",
          "path": [""]
        },
        "description": "Check if the service is running"
      },
      "response": []
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('user_id', pm.response.json().id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"securePassword123\",\n  \"name\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "http://localhost:3001/auth/register",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3001",
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Register User - Missing Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"name\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "http://localhost:3001/auth/register",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3001",
              "path": ["auth", "register"]
            },
            "description": "Test registration with missing password - should return 400 error"
          },
          "response": []
        },
        {
          "name": "Register User - Duplicate Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"anotherPassword123\",\n  \"name\": \"Jane Doe\"\n}"
            },
            "url": {
              "raw": "http://localhost:3001/auth/register",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3001",
              "path": ["auth", "register"]
            },
            "description": "Test registration with duplicate email - should return 409 error"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('auth_token', pm.response.json().token);",
                  "    pm.test('Token exists', function () {",
                  "        pm.expect(pm.response.json().token).to.exist;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"securePassword123\"\n}"
            },
            "url": {
              "raw": "http://localhost:3001/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3001",
              "path": ["auth", "login"]
            },
            "description": "Login with valid credentials to receive JWT token"
          },
          "response": []
        },
        {
          "name": "Login User - Invalid Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"wrongPassword\"\n}"
            },
            "url": {
              "raw": "http://localhost:3001/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3001",
              "path": ["auth", "login"]
            },
            "description": "Test login with invalid password - should return 401 error"
          },
          "response": []
        },
        {
          "name": "Login User - Missing Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"securePassword123\"\n}"
            },
            "url": {
              "raw": "http://localhost:3001/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3001",
              "path": ["auth", "login"]
            },
            "description": "Test login with missing email - should return 400 error"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3002/products",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3002",
              "path": ["products"]
            },
            "description": "Retrieve all products"
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3002/products/{{product_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3002",
              "path": ["products", "{{product_id}}"]
            },
            "description": "Retrieve a specific product by ID"
          },
          "response": []
        },
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('product_id', pm.response.json()._id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Laptop\",\n  \"description\": \"High-performance laptop for developers\",\n  \"category\": \"Electronics\",\n  \"price\": 1299.99,\n  \"stock\": true\n}"
            },
            "url": {
              "raw": "http://localhost:3002/products",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3002",
              "path": ["products"]
            },
            "description": "Create a new product"
          },
          "response": []
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Laptop Pro\",\n  \"description\": \"High-performance laptop for developers - Updated\",\n  \"category\": \"Electronics\",\n  \"price\": 1399.99,\n  \"stock\": true\n}"
            },
            "url": {
              "raw": "http://localhost:3002/products/{{product_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3002",
              "path": ["products", "{{product_id}}"]
            },
            "description": "Update an existing product"
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:3002/products/{{product_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3002",
              "path": ["products", "{{product_id}}"]
            },
            "description": "Delete a product"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Cart",
      "item": [
        {
          "name": "Get Cart by User ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3003/cart/{{user_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3003",
              "path": ["cart", "{{user_id}}"]
            },
            "description": "Get cart for a specific user. Returns empty cart if not found."
          },
          "response": []
        },
        {
          "name": "Create or Update Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('cart_id', pm.response.json()._id);",
                  "    pm.test('Total Price Calculated', function () {",
                  "        pm.expect(pm.response.json().totalPrice).to.exist;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"items\": [\n    {\n      \"productId\": \"prod001\",\n      \"name\": \"Laptop\",\n      \"price\": 1299.99,\n      \"quantity\": 1\n    },\n    {\n      \"productId\": \"prod002\",\n      \"name\": \"Wireless Mouse\",\n      \"price\": 29.99,\n      \"quantity\": 2\n    },\n    {\n      \"productId\": \"prod003\",\n      \"name\": \"USB-C Cable\",\n      \"price\": 9.99,\n      \"quantity\": 3\n    }\n  ]\n}"
            },
            "url": {
              "raw": "http://localhost:3003/cart",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3003",
              "path": ["cart"]
            },
            "description": "Create a new cart or update existing cart with items. Automatically calculates total price."
          },
          "response": []
        },
        {
          "name": "Update Cart - Change Quantities",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"items\": [\n    {\n      \"productId\": \"prod001\",\n      \"name\": \"Laptop\",\n      \"price\": 1299.99,\n      \"quantity\": 2\n    },\n    {\n      \"productId\": \"prod002\",\n      \"name\": \"Wireless Mouse\",\n      \"price\": 29.99,\n      \"quantity\": 5\n    }\n  ]\n}"
            },
            "url": {
              "raw": "http://localhost:3003/cart",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3003",
              "path": ["cart"]
            },
            "description": "Update cart by changing item quantities. Total price is recalculated."
          },
          "response": []
        },
        {
          "name": "Clear Cart - Remove All Items",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"items\": []\n}"
            },
            "url": {
              "raw": "http://localhost:3003/cart",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3003",
              "path": ["cart"]
            },
            "description": "Clear cart by setting items to empty array"
          },
          "response": []
        },
        {
          "name": "Delete Cart",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:3003/cart/{{user_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3003",
              "path": ["cart", "{{user_id}}"]
            },
            "description": "Completely delete a user's cart from database"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('order_id', pm.response.json()._id);",
                  "    pm.test('Order Status is Pending', function () {",
                  "        pm.expect(pm.response.json().status).to.equal('Pending');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "http://localhost:3004/orders",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3004",
              "path": ["orders"]
            },
            "description": "Create a new order from user's cart. Fetches items and total from cart-service, then deletes the cart."
          },
          "response": []
        },
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3004/orders",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3004",
              "path": ["orders"]
            },
            "description": "Get all orders in the system"
          },
          "response": []
        },
        {
          "name": "Get Orders by Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3004/orders/status/Pending",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3004",
              "path": ["orders", "status", "Pending"]
            },
            "description": "Get orders by status (Pending, Processing, Shipped, Delivered, Cancelled)"
          },
          "response": []
        },
        {
          "name": "Get Orders by User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3004/orders/user/{{user_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3004",
              "path": ["orders", "user", "{{user_id}}"]
            },
            "description": "Get all orders for a specific user"
          },
          "response": []
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3004/orders/{{order_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3004",
              "path": ["orders", "{{order_id}}"]
            },
            "description": "Get a specific order by ID"
          },
          "response": []
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"Processing\"\n}"
            },
            "url": {
              "raw": "http://localhost:3004/orders/{{order_id}}/status",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3004",
              "path": ["orders", "{{order_id}}", "status"]
            },
            "description": "Update order status. Valid statuses: Pending, Processing, Shipped, Delivered, Cancelled"
          },
          "response": []
        },
        {
          "name": "Delete Order",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:3004/orders/{{order_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3004",
              "path": ["orders", "{{order_id}}"]
            },
            "description": "Delete a specific order"
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "product_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "cart_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "order_id",
      "value": "",
      "type": "string"
    }
  ]
}
